{"version":3,"sources":["Components/songs.js","Components/Map.js","Components/Home.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["slides","key","uuidv4","content","react_default","a","createElement","src","alt","Songs","state","goToSlide","offsetRadius","showNavigation","config","gentle","onChangeInput","e","_this","setState","Object","defineProperty","target","name","parseInt","value","row","style","textAlign","fontSize","width","height","margin","bundle_default","this","animationConfig","Component","MyMapComponent","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","lifecycle","componentWillMount","refs","position","onMarkerMounted","ref","marker","onPositionChanged","getPosition","console","log","toString","withScriptjs","withGoogleMap","props","lib","defaultZoom","defaultCenter","lat","lng","isMarkerShown","draggable","HomePage","minHeight","marginBottom","className","top","zIndex","pointerEvents","color","fontWeight","fontFamily","paddingTop","particles_default","params","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","songs","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Content","Layout","Header","App","Footer","Sider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firestore","collection","get","then","snapshot","docs","forEach","docSnapshot","data","layout","marginLeft","overflow","padding","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5dd13dcc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row,Timeline,Icon } from 'antd';\nimport Carousel from \"react-spring-3d-carousel\";\nimport uuidv4 from \"uuid\";\nimport { config } from \"react-spring\";\n\nlet slides = [\n    {\n      key: uuidv4(),\n      content: <img src=\"https://www.rollingstone.com/wp-content/uploads/2018/06/eminem-track-by-track-revival-new-eafd74b0-8fb9-4907-91a0-d445258b7337.jpg?crop=900:600&width=440\" alt=\"1\" />\n    },\n    {\n      key: uuidv4(),\n      content: <img src=\"https://i1.sndcdn.com/avatars-000478542645-7o1c2a-t500x500.jpg\" alt=\"2\" />\n    },\n    {\n        key: uuidv4(),\n        content: <img src=\"https://cps-static.rovicorp.com/3/JPG_400/MI0003/892/MI0003892946.jpg?partner=allrovi.com\" alt=\"2\" />\n      },\n      {\n        key: uuidv4(),\n        content: <img src=\"https://i.vimeocdn.com/portrait/9461185_300x300\" alt=\"2\" />\n      }\n  ];\n  class Songs extends Component {\n    state = {\n      goToSlide: 0,\n      offsetRadius: 2,\n      showNavigation: true,\n      config: config.gentle\n    };\n  \n    onChangeInput = (e) => {\n      this.setState({\n        [e.target.name]: parseInt(e.target.value, 10) || 0\n      });\n    };\n  \n    render() {\n      return (\n          <Row>\n              <h1 style={{textAlign:\"center\",fontSize:\"20px\"}}>Best Songs, Best Singer </h1>\n        <Row style={{ width: \"80%\", height: \"500px\", margin: \"0 auto\" }}>\n\n          <Carousel\n            slides={slides}\n            goToSlide={this.state.goToSlide}\n            offsetRadius={this.state.offsetRadius}\n            showNavigation={this.state.showNavigation}\n            animationConfig={this.state.config}\n          />\n      \n        </Row>\n        </Row>\n      );\n    }\n  }\n\nexport default Songs;","import React, { Component } from \"react\"\nimport { compose, withProps, lifecycle } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\n\nconst MyMapComponent = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAvcDy5ZYc2ujCS6TTtI3RYX5QmuoV8Ffw&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    lifecycle({\n        componentWillMount() {\n            const refs = {}\n\n            this.setState({\n                position: null,\n                onMarkerMounted: ref => {\n                    refs.marker = ref;\n                },\n\n                onPositionChanged: () => {\n                    const position = refs.marker.getPosition();\n                    console.log(position.toString());\n                }\n            })\n        },\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) =>\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n        {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} draggable={true} ref={props.onMarkerMounted} onPositionChanged={props.onPositionChanged} />}\n    </GoogleMap>\n    )\n\nclass Map extends Component {\n    state = {\n        isMarkerShown: false,\n    }\n\n\n    render() {\n        return (\n            <div>\n                <MyMapComponent isMarkerShown={true} />\n            </div>\n        )\n    }\n}\n\n\nexport default Map;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Row} from 'antd';\nimport Particles from 'react-particles-js';\nimport Songs from \"./songs.js\";\nimport Map from \"./Map.js\";\n\nclass HomePage extends Component{\n\n  render(){\n    return(\n      <div>\n      <Row style={{width:\"100%\",minHeight:\"300px\",marginBottom:\"10px\"}} className={\"particles\"}>\n      <div style={{textAlign:\"center\",position:\"absolute\",top:\"30%\",zIndex:\"150\",width:\"100%\",pointerEvents:\"none\"}}>\n      <h1 style={{color:\"white\",textAlign:\"center\",fontWeight:\"bold\",fontSize:\"60px\"}}>Road Trax</h1>\n      <h3 style={{color:\"white\",textAlign:\"center\",fontSize:\"50px\",fontFamily: \"Lucida Typewriter\",paddingTop:\"90px\"}}>  Add fun to your Roads, Dive into the best music</h3>\n      <h3 style={{color:\"white\",textAlign:\"center\",fontSize:\"30px\",fontFamily: \"Courier New\"}}>  Diffrent Roads but best Music </h3>\n\n      </div>\n    <Particles\n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 260,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 5,\n\t                \"size_min\": 0.5\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n\t}} />\n                      </Row>\n\n\n      <Songs />\n\n      </div>\n    )\n  }\n\n}\n\n\nexport default HomePage\n","import firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyC6Hrbr8VfTwrn4vQeMwigPfhovN71TIPc\",\n  authDomain: \"road-trax.firebaseapp.com\",\n  databaseURL: \"https://road-trax.firebaseio.com\",\n  projectId: \"road-trax\",\n  storageBucket: \"road-trax.appspot.com\",\n  messagingSenderId: \"136018285803\",\n  appId: \"1:136018285803:web:aa91cc1b793444c0\"\n};\n\nvar firebaseApp = firebase.initializeApp(config);\n\nexport default firebaseApp;\n","import React, { Component } from 'react';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Icon,Input } from 'antd';\nimport HomePage from \"./Components/Home\";\nimport firebaseApp from \"./firebase.js\"\n\n\nconst {Header, Content, Footer, Sider} = Layout;\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      songs:[\"we\"]\n    }\n  }\n  componentDidMount(){\n    firebaseApp.firestore().collection('roads').get().then(function(snapshot) {\n      snapshot.docs.forEach((docSnapshot) => {\n        console.log(docSnapshot.data())\n      })\n    });\n    this.setState({\n    })\n\n  }\n  render() {\n    return (\n      <Layout>\n\n     <Layout style={{ marginLeft: 0 }}>\n\n       <Content style={{width:\"100%\" ,overflow: 'initial' ,height:\"100%\"}}>\n         <div style={{ padding: 0,height:\"100%\" }}>\n         <HomePage />\n         </div>\n       </Content>\n\n     </Layout>\n   </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC6Hrbr8VfTwrn4vQeMwigPfhovN71TIPc\",\n  authDomain: \"road-trax.firebaseapp.com\",\n  databaseURL: \"https://road-trax.firebaseio.com\",\n  projectId: \"road-trax\",\n  storageBucket: \"road-trax.appspot.com\",\n  messagingSenderId: \"136018285803\",\n  appId: \"1:136018285803:web:aa91cc1b793444c0\"\n};\n//firebase.initializeApp(firebaseConfig);\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}